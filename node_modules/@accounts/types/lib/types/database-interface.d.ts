import { User } from './user';
import { CreateUser } from './create-user';
import { DatabaseInterfaceSessions } from './session/database-interface';
import { DatabaseInterfaceServicePassword } from './services/password/database-interface';
export interface DatabaseInterface<CustomUser extends User = User> extends DatabaseInterfaceSessions, DatabaseInterfaceServicePassword<CustomUser> {
    findUserById(userId: string): Promise<CustomUser | null>;
    createUser(user: CreateUser): Promise<string>;
    findUserByServiceId(serviceName: string, serviceId: string): Promise<CustomUser | null>;
    setService(userId: string, serviceName: string, data: object): Promise<void>;
    unsetService(userId: string, serviceName: string): Promise<void>;
    setUserDeactivated(userId: string, deactivated: boolean): Promise<void>;
}
